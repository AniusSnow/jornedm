/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp LWIN  &kp ESC         &kp Q  &kp W  &kp E             &kp R         &kp T          &kp Y        &kp U      &kp I            &kp O      &kp P     &kp UP_ARROW    &mt RWIN RBKT
          &kp TAB         &kp A  &kp S  &kp D             &kp F         &kp G          &kp H        &kp J      &kp K            &kp L      &kp SEMI  &kp DOWN_ARROW
          &kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V         &kp B          &kp B        &kp N      &kp M            &kp COMMA  &kp DOT   &kp FSLH
                                        &kp LEFT_COMMAND  &kp LEFT_ALT  &lt 1 SPACE    &lt 2 ENTER  &kp SPACE  &lt 1 BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp K_UNDO  &kp N1            &kp N2          &kp N3       &kp N4           &kp N5               &kp COMMA         &kp DOT            &kp SLASH  &kp SEMICOLON  &kp SQT   &kp CAPSLOCK     &mt RGUI F12
        &kp DELETE  &kp N6            &kp N7          &kp N8       &kp N9           &kp N0               &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL      &kp RPAR  &mt RCTRL MINUS
        &bt BT_CLR  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &kp N4       &kp C_VOLUME_UP  &kp C_VOLUME_DOWN    &kp N6            &kp N7             &kp N8     &kp N9         &kp N0    &kp RIGHT_SHIFT
                                                      &lt ADJ TAB  &kp SPACE        &trans               &trans            &lt 3 N0           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp LEFT_BRACKET   &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp LEFT_ARROW   &trans
        &kp RIGHT_BRACKET  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &kp RIGHT_ARROW
        &bt BT_CLR         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                       &trans     &trans     &lt ADJ RET     &lt ADJ ESC   &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &none         &none         &none           &rgb_ug RGB_ON   &rgb_ug RGB_OFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI   &rgb_ug RGB_EFF    &sys_reset
            &bt BT_CLR     &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bl BL_ON        &bl BL_OFF       &bl BL_INC       &bl BL_DEC       &bl BL_CYCLE      &bl BL_SET 60
            &trans         &bt BT_CLR_ALL  &trans         &none         &bt BT_PRV    &bt BT_NXT      &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &none            &none            &ext_power EP_ON  &ext_power EP_OFF
                                                          &trans        &none         &trans          &trans           &none            &trans
            >;
        };
    };
};
